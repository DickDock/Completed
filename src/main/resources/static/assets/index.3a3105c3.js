var e=Object.defineProperty,t=(t,s,r)=>(((t,s,r)=>{s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[s]=r})(t,"symbol"!=typeof s?s+"":s,r),r);import{p as s}from"./element-plus.4cbc4200.js";import{a as r}from"./axios.82d3905a.js";const o=r.CancelToken;let a=[],n=e=>{for(let t in a)a[t].umet===e.url+"&"+e.method&&(a[t].cancel("已取消重复请求，请勿重复请求"),a.splice(t,1))};const c=new class{constructor(){t(this,"baseURL"),t(this,"timeout");const e=String("false");this.baseURL="true"==e?"/api/":"/","true"==e?(console.log("获取到的开发状态变量类型为： "+typeof e),console.log("获取到的开发状态为： "+e),console.log("最终URL为： "+this.baseURL)):(console.log("当前为生产环境！"),console.log("获取到的开发状态变量类型为： "+typeof e),console.log("获取到的开发状态为： "+e),console.log("最终URL为： "+this.baseURL)),this.timeout=3e3}getConfigParams(){return{baseURL:this.baseURL,timeout:this.timeout,headers:{}}}interceptors(e,t){e.interceptors.request.use((e=>{if(n(e),e.cancelToken=new o((t=>{a.push({umet:e.url+"&"+e.method,cancel:t})})),e.headers["Content-Type"]="application/json;charset=utf-8","get"===e.method&&e.params){let t=e.url+"?";for(const s of Object.keys(e.params)){const r=e.params[s],o=encodeURIComponent(s)+"=";if(null!=r)if("object"==typeof r)for(const e of Object.keys(r)){t+=encodeURIComponent(s+"["+e+"]")+"="+encodeURIComponent(r[e])+"&"}else t+=o+encodeURIComponent(r)+"&"}t=t.slice(0,-1),e.params={},e.url=t}return e}),(e=>Promise.reject(e))),e.interceptors.response.use((e=>{n(e.config);const t=e.data.code||200;let r=e.data.msg||"";switch(t){case"401":r="认证失败，无法访问系统资源";break;case"403":r="当前操作没有权限";break;case"404":r="访问资源不存在";break;case"default":r="系统未知错误，请反馈给管理员";break;default:r="未知错误，请联系管理员"}return 200===t?Promise.resolve(e.data):(s.error(r),Promise.reject(e.data))}),(e=>{console.log("err"+e);let{message:t}=e;return"Network Error"==t?t="后端接口连接异常":t.includes("timeout")?t="系统接口请求超时":t.includes("Request failed with status code")&&(t="系统接口"+t.substr(t.length-3)+"异常"),s.error({message:t,duration:5e3}),Promise.reject(e)}))}request(e){const t=r.create();return e=Object.assign(this.getConfigParams(),e),this.interceptors(t,e.url),t(e)}};class l{static getUserList(){return c.request({url:"users",method:"GET"})}static updateUser(e){return c.request({url:"users",method:"PUT",data:e})}static delUser(e){return c.request({url:"users",method:"DELETE",data:e})}static getUserByPage(e,t){return c.request({url:"users/pages/"+e+"/"+t,method:"GET"})}static getCaptcha(){return c.request({url:"login/getCode",method:"GET"})}static login(e){return c.request({url:"login",method:"POST",data:e})}}export{l as u};
